knitr::opts_chunk$set(echo = FALSE, comment=NA)
ds = read.csv(fileN)
fileN <- r"C:\Users\sutov\Dropbox\Work\Manchester\dECMT\NephroOncologyWriting\data_inputs\sumary_metrics_v00_time_time=20-05-19_04-19-54_short.csv"
fileN <- "C:\\Users\sutov\\Dropbox\\Work\Manchester\\dECMT\NephroOncologyWriting\\data_inputs\\sumary_metrics_v00_time_time=20-05-19_04-19-54_short.csv"
fileN <- "C:\\Users\\sutov\\Dropbox\\Work\Manchester\\dECMT\NephroOncologyWriting\\data_inputs\\sumary_metrics_v00_time_time=20-05-19_04-19-54_short.csv"
fileN <- "C:\\Users\\sutov\\Dropbox\\Work\\Manchester\\dECMT\NephroOncologyWriting\\data_inputs\\sumary_metrics_v00_time_time=20-05-19_04-19-54_short.csv"
fileN <- "C:\\Users\\sutov\\Dropbox\\Work\\Manchester\\dECMT\\NephroOncologyWriting\\data_inputs\\sumary_metrics_v00_time_time=20-05-19_04-19-54_short.csv"
fileN <- "C:\\Users\\sutov\\Dropbox\\Work\\Manchester\\dECMT\\NephroOncologyWriting\\data_inputs\\sumary_metrics_v00_time_time=20-05-19_04-19-54_short.csv"
ds = read.csv(fileN)
print(2+6)
View(ds)
fileN <- "C:\\Users\\sutov\\Dropbox\\Work\\Manchester\\dECMT\\NephroOncologyWriting\\data_inputs\\sumary_metrics_v00_time_time=20-05-19_05-25-35_short.csv"
ds = read.csv(fileN)
print(2+6)
library(dplyr)
```{r}
library(magrittr)
library(dplyr)
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library("rlang", lib.loc="C:/Users/sutov/anaconda3/envs/rstudiov2/Lib/R/library")
install.packages("rlang")
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "caret", "caTools", "class", "clipr", "cluster", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "foreach", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "later", "lattice", "lava", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "R6", "RCurl", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "uuid", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "caret", "caTools", "class", "clipr", "cluster", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "foreach", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "later", "lattice", "lava", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "R6", "RCurl", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "uuid", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "caret", "caTools", "class", "clipr", "cluster", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "foreach", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "later", "lattice", "lava", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "R6", "RCurl", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "uuid", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "caret", "caTools", "class", "clipr", "cluster", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "foreach", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "later", "lattice", "lava", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "R6", "RCurl", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "uuid", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "caret", "caTools", "class", "clipr", "cluster", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "foreach", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "later", "lattice", "lava", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "R6", "RCurl", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "uuid", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("askpass", "backports", "BH", "bit", "blob", "boot", "broom", "caret", "caTools", "class", "clipr", "cluster", "curl", "data.table", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "foreach", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "IRkernel", "iterators", "KernSmooth", "later", "lattice", "lava", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "R6", "RCurl", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rsconnect", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "uuid", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
knitr::opts_chunk$set(echo = FALSE, comment=NA)
name = colnames(ds)
print(colNames)
print(colNames)
colNames = colnames(ds)
print(colNames)
print(header(ds))
print(head(ds))
colNames = colnames(ds)
print(colNames)
print(head(ds))
print(ds2)
ds2 <- ds[c("modelName","accuracy")]
print(ds2)
knitr::kable(ds2,caption("Accuracies for various models"))
knitr::kable(ds2,caption="Accuracies for various models")
```{r results="asis"}
knitr::kable(ds2,caption="Accuracies for various models")
library(xtable)
xtable(ds2)
print.xtable(m1)
print.xtable(m1.table)
library(xtable)
m1.table <- xtable(ds2)
print.xtable(m1.table)
print.xtable(m1.table,type="pdf")
print.xtable(m1.table,type="html")
print.xtable(m1.table,type="tex")
print.xtable(m1.table,type="latex")
knitr::kable(ds2,caption="Accuracies for various models",digits = 2)
print.xtable(m1.table,type="latex",caption="Accuracies for various models",digits = 2,label = "accuracies",floating = FALSE)
library(xtable)
m1.table <- xtable(ds2)
print.xtable(m1.table,type="latex",caption="Accuracies for various models",digits = 2,label = "accuracies",floating = FALSE)
library(xtable)
m1.table <- xtable(ds2,digits = 2)
print.xtable(m1.table,type="latex",caption="Accuracies for various models", label = "accuracies",floating = FALSE)
library(xtable)
m1.table <- xtable(ds2,digits = 2,caption="Accuracies for various models", label = "accuracies")
print.xtable(m1.table,type="latex",floating = FALSE)
library(xtable)
m1.table <- xtable(ds2,digits = 2,caption="Accuracies for various models", label = "accuracies")
print.xtable(m1.table,type="latex",floating = FALSE)
library(xtable)
m1.table <- xtable(ds2,digits = 2,caption="Accuracies for various models", label = "accuracies")
print.xtable(m1.table,type="latex",floating = FALSE,caption.placement = "bottom")
library(xtable)
m1.table <- xtable(ds2,digits = 2,caption="Accuracies for various models", label = "accuracies")
print.xtable(m1.table,type="latex",floating = FALSE,caption.placement = "bottom", include.rownames = FALSE,only.contents = TRUE)
library(xtable)
m1.table <- xtable(ds2,digits = 2,caption="Accuracies for various models", label = "accuracies")
print.xtable(m1.table,type="latex",floating = FALSE,caption.placement = "bottom", include.rownames = FALSE,only.contents = TRUE)
library(xtable)
#Just some random data
x1 <- rnorm(1000); x2 <- rnorm(1000); x3 <- rnorm(1000)
y  <- 2 + 1 *x1 + rnorm(1000)
#Run regressions
reg1 <- summary(lm(y ~ x1))
reg2 <- summary(lm(y ~ x2))
reg3 <- summary(lm(y ~ x3))
#Create data.frame
df <- data.frame(Model = 1:3,
Alpha = c(reg1$coef[1,1], reg2$coef[1,1], reg3$coef[1,1]),
Beta  = c(reg1$coef[2,1], reg2$coef[2,1], reg3$coef[2,1]),
tV    = c(reg1$coef[2,2], reg2$coef[2,2], reg3$coef[2,2]),
AdjR  = c(reg1$adj.r.s,  reg2$adj.r.s,   reg3$adj.r.s))
strCaption <- paste0("\\textbf{Table Whatever} This table is just produced with some",
"random data and does not mean anything. Just to show you how ",
"things work.")
print(xtable(df, digits=2, caption=strCaption, label="Test_table"),
size="footnotesize", #Change size; useful for bigger tables
include.rownames=FALSE, #Don't print rownames
include.colnames=FALSE, #We create them ourselves
caption.placement="top",
hline.after=NULL, #We don't need hline; we use booktabs
add.to.row = list(pos = list(-1,
nrow(df)),
command = c(paste("\\toprule \n",
"Model & $\\alpha$ & $\\beta$ & t-value & $R^2$ \\\\\n",
"\\midrule \n"),
"\\bottomrule \n")
)
)
library(xtable)
#Just some random data
x1 <- rnorm(1000); x2 <- rnorm(1000); x3 <- rnorm(1000)
y  <- 2 + 1 *x1 + rnorm(1000)
#Run regressions
reg1 <- summary(lm(y ~ x1))
reg2 <- summary(lm(y ~ x2))
reg3 <- summary(lm(y ~ x3))
#Create data.frame
df <- data.frame(Model = 1:3,
Alpha = c(reg1$coef[1,1], reg2$coef[1,1], reg3$coef[1,1]),
Beta  = c(reg1$coef[2,1], reg2$coef[2,1], reg3$coef[2,1]),
tV    = c(reg1$coef[2,2], reg2$coef[2,2], reg3$coef[2,2]),
AdjR  = c(reg1$adj.r.s,  reg2$adj.r.s,   reg3$adj.r.s))
strCaption <- paste0("\\textbf{Table Whatever} This table is just produced with some",
"random data and does not mean anything. Just to show you how ",
"things work.")
print(xtable(df, digits=2, caption=strCaption, label="Test_table"),
size="footnotesize", #Change size; useful for bigger tables
include.rownames=FALSE, #Don't print rownames
include.colnames=FALSE, #We create them ourselves
caption.placement="top",
hline.after=NULL, #We don't need hline; we use booktabs
add.to.row = list(pos = list(-1,
nrow(df)),
command = c(paste("\\toprule \n",
"Model & $\\alpha$ & $\\beta$ & t-value & $R^2$ \\\\\n",
"\\midrule \n"),
"\\bottomrule \n")
)
)
library(xtable)
m1.table <- xtable(ds2,digits = 2,caption="Accuracies for various models", label = "accuracies")
print.xtable(m1.table,type="latex",floating = FALSE,caption.placement = "bottom", include.rownames = FALSE)
unlink('code_for_lyx_cache', recursive = TRUE)
print(head(ds))
colNames = colnames(ds)
print(colNames)
ds2 <- ds[c("modelName","missing_data","recordCount","accuracy")]
# print(ds2)
install.packages("kableExtra")
install.packages("tidyr")
knitr::kable(ds2,caption="Accuracies for various models(kable)",digits = 2,label = "accuracies",booktabs=T)
knitr::kable(ds2,caption="Accuracies for various models(kable)",digits = 2,label = "accuracies",booktabs=T)
knitr::opts_chunk$set(echo = TRUE)
colnames(df)
knitr::opts_chunk$set(echo = FALSE, comment=NA)
kable(ds2,digits = 2,booktabs=T,caption = "Accuracy with caption",label = "accuracy",col.names = c("model name", "missing data present", "recods count", "accuracy"))  %>% kable_styling (latex_options = c("striped","scale_down"))
kable(ds2,digits = 2,booktabs=T,caption = "Accuracy with caption",label = "accuracy",col.names = c("model name", "missing data present", "recods count", "accuracy"))  %>% kable_styling (latex_options = c("striped","scale_down"))
library(magrittr)
library(dplyr)
library(kableExtra)
library(magrittr)
library(dplyr)
library(kableExtra)
kable(ds2,digits = 2,booktabs=T,caption = "Accuracy with caption",label = "accuracy",col.names = c("model name", "missing data present", "recods count", "accuracy"))  %>% kable_styling (latex_options = c("striped","scale_down"))
View(ds)
View(ds)
